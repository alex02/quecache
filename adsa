[1mdiff --git a/class_cache.php b/class_cache.php[m
[1mindex 3a05bd1..268a234 100644[m
[1m--- a/class_cache.php[m
[1m+++ b/class_cache.php[m
[36m@@ -99,6 +99,12 @@[m
     [m
     private $qc_special_chars = array('#DOT#', '#ALL#', '#SYMB1#', '#SYMB2#', '#SYMB3#', '#SYMB4#', '#SYMB5#', '#SYMB6#', '#SYMB7#', '#SYMB8#', '#SYMB9#', '#SYMB10#', '#SYMB11#', '#SYMB12#', '#SYMB13#', '#SYMB14#', '#SYMB15#', '#SYMB16#', '#SYMB17#', '#SYMB18#', '#SYMB19#', '#SYMB20#', '#SYMB21#', '#SYMB22#');[m
 [m
[32m+[m[32m    private $new_line = '\n';[m
[32m+[m[41m    [m
[32m+[m[32m    private $each_syntax = '{%s}:{%s}';[m
[32m+[m[41m    [m
[32m+[m[32m    private $blank = 'blank';[m
[32m+[m
     /*[m
      * Check if cache file is in place,[m
      * and it has valid timing.[m
[36m@@ -175,11 +181,11 @@[m
         $timed = (!is_int($timed)) ? strtotime($timed)-time() : $timed;[m
   [m
         $value = $this->cache_default;[m
[31m-        $value .= "\n" . $val . "";[m
[32m+[m[32m        $value .= $this->new_line . $val;[m
   [m
         $time_needed = time()+$timed;[m
         $time = $this->cache_default;[m
[31m-        $time .= "\n" . $time_needed . "";[m
[32m+[m[32m        $time .= $this->new_line . $time_needed;[m
      [m
      [m
         /**[m
[36m@@ -215,7 +221,7 @@[m
                 default:[m
        [m
                 $value = $this->cache_default;[m
[31m-                $value .= "\n" . $val . "";[m
[32m+[m[32m                $value .= $this->new_line . $val;[m
            [m
                 if(file_put_contents($this->cache_dir . "/{$key}." . $this->cache_extension, $value))[m
                 {[m
[36m@@ -230,7 +236,7 @@[m
       [m
                 $time_needed = time()+$val;[m
                 $time = $this->cache_default;[m
[31m-                $time .= "\n" . $time_needed . "";[m
[32m+[m[32m                $time .= $this->new_line . $time_needed;[m
            [m
                 if(file_put_contents($this->cache_dir . "/{$key}" . $this->cache_prefix . "." . $this->cache_extension, $time))[m
                 {[m
[36m@@ -262,7 +268,7 @@[m
         {[m
             $cache_output = file_get_contents($this->cache_dir . "/{$key}." . $this->cache_extension);[m
             $cache_output = str_replace($this->cache_default, '', $cache_output);[m
[31m-            $cache_output = preg_replace("/\n/", "", $cache_output, 1);[m
[32m+[m[32m            $cache_output = preg_replace('/' . $this->new_line . '/', '', $cache_output, 1);[m
           [m
             return $cache_output;[m
         }[m
[36m@@ -283,7 +289,7 @@[m
         {[m
             $cache_output_time = file_get_contents($this->cache_dir . "/{$key}" . $this->cache_prefix . "." . $this->cache_extension);[m
             $cache_output_time = str_replace($this->cache_default, '', $cache_output_time);[m
[31m-            $cache_output_time = preg_replace("/\n/", "", $cache_output_time, 1);[m
[32m+[m[32m            $cache_output_time = preg_replace('/' . $this->new_line . '/', '', $cache_output_time, 1);[m
      [m
             return (integer) $cache_output_time;[m
         }[m
[36m@@ -362,7 +368,7 @@[m
                  * If exists setup details for merging[m
                  */[m
                 $array[$num] = $this->get($ary[$num]);[m
[31m-                $array_imp = implode("\n", $array);[m
[32m+[m[32m                $array_imp = implode($this->new_line, $array);[m
           [m
                 $array_merge[$num] = $this->get($ary[$num]);[m
                 $array_imp_merge = implode($this->merge_delim, $array_merge);[m
[36m@@ -484,10 +490,10 @@[m
           $ary = '';[m
           foreach($array as $key => $name)[m
           {[m
[31m-              $key = (empty($key)) ? 'blank' : $key;[m
[31m-              $name = (empty($name)) ? 'blank' : $name;[m
[32m+[m[32m              $key = (empty($key)) ? $this->blank : $key;[m
[32m+[m[32m              $name = (empty($name)) ? $this->blank : $name;[m
               $name = str_replace($this->special_chars, $this->qc_special_chars, $name);[m
[31m-              $ary .= "{{$key}}:{{$name}}";[m
[32m+[m[32m              $ary .= sprintf($this->each_syntax, $key, $name);[m
           }[m
           [m
           if($this->put($key_name, $ary, $time))[m
[36m@@ -508,9 +514,9 @@[m
        */[m
       function geteach($key_name)[m
       {[m
[31m-          if(preg_match("/[\{(.*)\}\:\{(.*)\}]+/", $this->get($key_name)))[m
[32m+[m[32m          if(preg_match("/[" . parse_regex($this->each_syntax) . "]+/", $this->get($key_name)))[m
           {[m
[31m-              $result = preg_split("/[\{(.*)\}\:\{(.*)\}]+/", $this->get($key_name), -1, PREG_SPLIT_NO_EMPTY);[m
[32m+[m[32m              $result = preg_split("/[" . parse_regex($this->each_syntax) . "]+/", $this->get($key_name), -1, PREG_SPLIT_NO_EMPTY);[m
               for($i = 0;$i < sizeof($result);$i++)[m
               {[m
                   if($i % 2 == 0)[m
[36m@@ -838,6 +844,42 @@[m
         return;[m
      }[m
 [m
[32m+[m[32m    function parse_regex($string, $spec_symbol = '~', $type = '%s')[m
[32m+[m[32m    {[m
[32m+[m
[32m+[m[32m        $string_array = array();[m
[32m+[m[32m        $str = '';[m
[32m+[m
[32m+[m[32m        for($i = 0;$i < strlen($string);$i++)[m
[32m+[m[32m        {[m
[32m+[m[32m            if($string[$i] == $type[0])[m
[32m+[m[32m            {[m
[32m+[m[32m                $string_array[] = $string[$i] . $string[$i+1];[m
[32m+[m[32m                $string[$i+1] = $spec_symbol;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $string_array[] = str_replace($string[$i], '\\' . $string[$i], $string[$i]);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        for($j = 0;$j < sizeof($string_array);$j++)[m
[32m+[m[32m        {[m
[32m+[m[32m            if($string_array[$j] == '\\' . $spec_symbol)[m
[32m+[m[32m            {[m
[32m+[m[32m                if($string_array[$j-1] == $type)[m
[32m+[m[32m                {[m
[32m+[m[32m                    unset($string_array[$j]);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        foreach($string_array as $str_symbol)[m
[32m+[m[32m        {[m
[32m+[m[32m            $str .= $str_symbol;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $str;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
   }[m
   [m
   class plugin extends cache[m
